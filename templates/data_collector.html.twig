{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block toolbar %}
    {% if collector.totalMappings > 0 %}
        {% set icon %}
        {{ source('@RekalogikaMapper/map.svg') }}
        <span class="sf-toolbar-value">{{ collector.totalMappings }}</span>
        {% endset %}

        {% set text %}
        <div class="sf-toolbar-info-piece">
            <b>Total mappings</b>
            <span class="sf-toolbar-status">{{ collector.totalMappings }}</span>
        </div>

        <div class="sf-toolbar-info-piece">
            <b>Including submappings</b>
            <span class="sf-toolbar-status">{{ collector.totalMappingsIncludingSubMappings }}</span>
        </div>

        <div class="sf-toolbar-info-piece">
            <b>Total time</b>
            <span>
                {{ '%.2f'|format(collector.totalTime * 1000) }}
                <span class="unit">ms</span>
            </span>
        </div>
        {% endset %}

        {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { link: profiler_url }) }}
    {% endif %}
{% endblock %}

{% block menu %}
    <span class="label {{ not collector.mappings|length ? 'disabled' }}">
        <span class="icon">{{ source('@RekalogikaMapper/map.svg') }}</span>
        <strong>Mapper</strong>
    </span>
{% endblock %}

{% block panel %}
    <h2>Mapper</h2>
    <div class="sf-rekalogika_mapper sf-reset">
        {% if collector.mappings|length == 0 %}
            <div class="empty">
                <p>No mappings were recorded.</p>
            </div>
        {% else %}
            {{ _self.render_metrics(collector) }}

            <div class="sf-tabs">
                {{ _self.render_mappings_tab(collector.mappings) }}
                {{ _self.render_o2o_tab(collector.objectToObjectMetadatas) }}
            </div>
        {% endif %}

    </div>
{% endblock %}

{% macro render_metrics(collector) %}
    <div class="metrics">
        <div class="metric">
            <span class="value">{{ collector.totalMappings }}</span>
            <span class="label">Mappings</span>
        </div>

        <div class="metric">
            <span class="value">{{ collector.totalMappingsIncludingSubMappings }}</span>
            <span class="label">Including submappings</span>
        </div>

        <div class="metric">
            <span class="value">{{ '%.2f'|format(collector.totalTime * 1000) }}</span>
            <span class="label">Total time (ms)</span>
        </div>
    </div>
{% endmacro %}

{% macro render_mappings_tab(mappings) %}
    <div class="tab {{ not mappings ? 'disabled' }}">
        <h3 class="tab-title">
            Mappings
            <span class="badge">{{ mappings|length }}</span>
        </h3>

        <div class="tab-content">
            <table>
                <thead>
                    <tr>
                        <th>Path</th>
                        <th>Source Type</th>
                        <th>Existing Target Value Type</th>
                        <th>Target Type Hint</th>
                        <th>Selected Target Type</th>
                        <th>Target Result Type</th>
                        <th>Transformer</th>
                        <th>Duration</th>
                    </tr>
                </thead>

                {% for tracedata in mappings %}
                    {{ _self.render_row(tracedata, 0) }}
                {% endfor %}
            </table>
        </div>
    </div>
{% endmacro %}

{% macro render_o2o_tab(metadatas) %}
    <div class="tab {{ not metadatas ? 'disabled' }}">
        <h3 class="tab-title">
            Object to Object Metadata
            <span class="badge">{{ metadatas|length }}</span>
        </h3>

        <div class="tab-content">
            {% for metadata in metadatas %}
                {{ _self.render_o2o_metadata(metadata) }}
            {% endfor %}
        </div>
    </div>
{% endmacro %}

{% macro render_row(tracedata, depth) %}
    {% if depth == 0 %}
        <tr class="status-success">
            <th colspan="8">
                Called by:
                {% if tracedata.caller is defined %}
                    {% set caller = tracedata.caller %}
                    {% set random = random() %}
                    <span class="metadata">
                        {% if caller.line %}
                            {% set link = caller.file|file_link(caller.line) %}
                            {% if link %}
                                <a href="{{ link }}" title="{{ caller.file }}">{{ caller.name }}</a>
                            {% else %}
                                <abbr title="{{ caller.file }}">{{ caller.name }}</abbr>
                            {% endif %}
                        {% else %}
                            {{ caller.name }}
                        {% endif %}
                        line
                        <a class="text-small sf-toggle" data-toggle-selector="#sf-trace-{{ random }}">{{ caller.line }}</a>
                    </span>

                    <div class="sf-serializer-compact hidden" id="sf-trace-{{ random }}">
                        <div class="trace">
                            {{ caller.file|file_excerpt(caller.line) }}
                        </div>
                    </div>
                {% endif %}
            </th>
        </tr>
    {% endif %}
    <tr>
        {%- apply spaceless -%}
        <td>
            {%- if depth > 1 -%}
                {%- for i in 1..depth-1 -%}&nbsp;&nbsp;
                {%- endfor -%}
                └&nbsp;{{- tracedata.path ?? '(???)' -}}
            {%- elseif depth == 1 -%}
                └&nbsp;{{- tracedata.path ?? '(???)' -}}
            {%- else -%}
                {%- if tracedata.path -%}
                    {{- tracedata.path -}}
                {% else %}
                    <span class="badge badge-info">Root</span>
                {%- endif -%}
            {%- endif -%}
        </td>
        {%- endapply -%}
        <td>
            {{ tracedata.sourceType|abbr_class }}
        </td>
        <td>{{ tracedata.existingTargetType|abbr_class }}</td>
        <td>{{ tracedata.possibleTargetTypes|raw }}</td>
        <td>{{ tracedata.selectedTargetType|raw }}</td>
        <td>
            {{ tracedata.resultType|abbr_class }}
            {% if tracedata.lazyLoadingResult %}
                <span class="badge badge-success">Lazy</span>
            {% endif %}
        </td>
        <td>{{ tracedata.transformerClass|abbr_class }}</td>
        <td>
            <span class="nowrap">{{- '%.2f'|format(tracedata.time * 1000) -}}
                ms</span>
        </td>
    </tr>

    {% for child in tracedata.nestedTraceData %}
        {{ _self.render_row(child, depth + 1) }}
    {% endfor %}
{% endmacro %}

{% macro render_o2o_metadata(metadata) %}
    {{  dump(metadata) }}
{% endmacro %}
