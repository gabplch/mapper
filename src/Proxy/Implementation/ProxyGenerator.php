<?php

declare(strict_types=1);

/*
 * This file is part of rekalogika/mapper package.
 *
 * (c) Priyadi Iman Nurcahyo <https://rekalogika.dev>
 *
 * For the full copyright and license information, please view the LICENSE file
 * that was distributed with this source code.
 */

namespace Rekalogika\Mapper\Proxy\Implementation;

use Rekalogika\Mapper\Proxy\Exception\ProxyNotSupportedException;
use Rekalogika\Mapper\Proxy\ProxyGeneratorInterface;
use Rekalogika\Mapper\Proxy\ProxySpecification;
use Symfony\Component\VarExporter\Exception\LogicException;
use Symfony\Component\VarExporter\ProxyHelper;

final class ProxyGenerator implements ProxyGeneratorInterface
{
    public function generateProxy(string $class): ProxySpecification
    {
        /** @var class-string */
        $proxyClass = $this->generateProxyClassName($class);

        try {
            $proxyCode = $this->generateProxyCode($class);
        } catch (LogicException $e) {
            throw new ProxyNotSupportedException($class, $e);
        }

        return new ProxySpecification($proxyClass, $proxyCode);
    }

    /**
     * @param class-string $class
     * @return string
     */
    private function generateProxyClassName(string $class): string
    {
        return sprintf(
            'Rekalogika\Mapper\Generated\__CG__\%s',
            $class
        );
    }

    /**
     * @param class-string $class
     * @return string
     */
    private function generateProxyCode(string $class): string
    {
        $proxyClass = $this->generateProxyClassName($class);
        $targetReflection = new \ReflectionClass($class);

        // get proxy class name & namespace
        $shortName = preg_replace('/.*\\\\/', '', $proxyClass);
        $namespace = preg_replace('/\\\\[^\\\\]*$/', '', $proxyClass);

        return
            $this->getClassHeader() .
            sprintf('namespace %s;', $namespace) . "\n\n" .
            sprintf(
                'final %sclass %s%s',
                $targetReflection->isReadOnly() ? 'readonly ' : ' ',
                $shortName,
                ProxyHelper::generateLazyGhost($targetReflection)
            );
    }

    private function getClassHeader(): string
    {
        return <<<'PHP'
<?php

declare(strict_types=1);

/*
 * This is a proxy class automatically generated by the rekalogika/mapper
 * package. Do not edit it manually.
 */


PHP;
    }
}
